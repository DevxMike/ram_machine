Executable needs a text file <file_name>.txt to execute your algorithm.

i.e

>RAM my_algo.txt

Available operations:

ADD x //add Rx`s val to R0 value
ADD * x //get y from Rx and add Ry`s val to R0 value
ADD = x //add x val to R0 value
DIV x //div R0 val by Rx value
DIV * x //get y from Rx and div R0 by Ry
DIV = x //div R0 by x
HALT <none> //end the algorithm
JGTZ <name_of_loop> //if R0 contains a positive integer jump to loop
JUMP <name_of_loop> //jumps to <name_of_loop>
JZERO <name_of_loop> //if R0 val equals to 0 jump to loop
LOAD x //stores Rx in R0
LOAD * x //get y from Rx and store Ry in R0
LOAD = x //stores x in R0
MULT x //multiply R0 val by Rx value
MULT * x //get y from Rx and multiply R0 by Ry
MULT = x //multiply R0 by x
READ x //read from input to Rx
READ * x //get y from Rx and read from input to Ry
STORE x //copies R0 value into Rx
STORE * x //get y from Rx and store R0`s val in Ry
SUB x //substract Rx`s val from R0 value
SUB * x //get y from Rx and substract Ry`s val from R0 value
SUB = x //substract x val from R0 value
WRITE x //write Rx to output
WRITE * x //get y from Rx and write Ry to output

code with comments:

11 -20 -30; input line
start:; first label
    load =3; load 3 to R0
subst:; substract label
    sub =1; substract 1 from R0
    jump wr:; jump to write label
wr:; write label
    write 0; write R0 value
    jgtz subst:; if not R0 contains a positive integer, jump to subst

code without comments:

11 -20 -30
start:
    load =3
subst:
    sub =1
    jump wr:
wr:
    write 0
    jgtz subst: